// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: nosql-api.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CATEGORY int32

const (
	CATEGORY_ZERO  CATEGORY = 0
	CATEGORY_ONE   CATEGORY = 1
	CATEGORY_TWO   CATEGORY = 2
	CATEGORY_THREE CATEGORY = 3
	CATEGORY_FOUR  CATEGORY = 4
	CATEGORY_FIVE  CATEGORY = 5
	CATEGORY_SIX   CATEGORY = 6
	CATEGORY_SEVEN CATEGORY = 7
	CATEGORY_EIGHT CATEGORY = 8
	CATEGORY_NINE  CATEGORY = 9
)

// Enum value maps for CATEGORY.
var (
	CATEGORY_name = map[int32]string{
		0: "ZERO",
		1: "ONE",
		2: "TWO",
		3: "THREE",
		4: "FOUR",
		5: "FIVE",
		6: "SIX",
		7: "SEVEN",
		8: "EIGHT",
		9: "NINE",
	}
	CATEGORY_value = map[string]int32{
		"ZERO":  0,
		"ONE":   1,
		"TWO":   2,
		"THREE": 3,
		"FOUR":  4,
		"FIVE":  5,
		"SIX":   6,
		"SEVEN": 7,
		"EIGHT": 8,
		"NINE":  9,
	}
)

func (x CATEGORY) Enum() *CATEGORY {
	p := new(CATEGORY)
	*p = x
	return p
}

func (x CATEGORY) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CATEGORY) Descriptor() protoreflect.EnumDescriptor {
	return file_nosql_api_proto_enumTypes[0].Descriptor()
}

func (CATEGORY) Type() protoreflect.EnumType {
	return &file_nosql_api_proto_enumTypes[0]
}

func (x CATEGORY) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CATEGORY.Descriptor instead.
func (CATEGORY) EnumDescriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{0}
}

type CONDITION int32

const (
	CONDITION_NEW  CONDITION = 0
	CONDITION_USED CONDITION = 1
)

// Enum value maps for CONDITION.
var (
	CONDITION_name = map[int32]string{
		0: "NEW",
		1: "USED",
	}
	CONDITION_value = map[string]int32{
		"NEW":  0,
		"USED": 1,
	}
)

func (x CONDITION) Enum() *CONDITION {
	p := new(CONDITION)
	*p = x
	return p
}

func (x CONDITION) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CONDITION) Descriptor() protoreflect.EnumDescriptor {
	return file_nosql_api_proto_enumTypes[1].Descriptor()
}

func (CONDITION) Type() protoreflect.EnumType {
	return &file_nosql_api_proto_enumTypes[1]
}

func (x CONDITION) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CONDITION.Descriptor instead.
func (CONDITION) EnumDescriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{1}
}

type ProductModel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 string                 `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name               string                 `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Category           CATEGORY               `protobuf:"varint,3,opt,name=Category,proto3,enum=proto.CATEGORY" json:"Category,omitempty"`
	Keywords           []string               `protobuf:"bytes,4,rep,name=Keywords,proto3" json:"Keywords,omitempty"`
	Condition          CONDITION              `protobuf:"varint,5,opt,name=Condition,proto3,enum=proto.CONDITION" json:"Condition,omitempty"`
	SalePrice          float32                `protobuf:"fixed32,6,opt,name=SalePrice,proto3" json:"SalePrice,omitempty"`
	SellerID           string                 `protobuf:"bytes,7,opt,name=SellerID,proto3" json:"SellerID,omitempty"`
	Quantity           int32                  `protobuf:"varint,8,opt,name=Quantity,proto3" json:"Quantity,omitempty"`
	FeedBackThumbsUp   int32                  `protobuf:"varint,9,opt,name=FeedBackThumbsUp,proto3" json:"FeedBackThumbsUp,omitempty"`
	FeedBackThumbsDown int32                  `protobuf:"varint,10,opt,name=FeedBackThumbsDown,proto3" json:"FeedBackThumbsDown,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
}

func (x *ProductModel) Reset() {
	*x = ProductModel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProductModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProductModel) ProtoMessage() {}

func (x *ProductModel) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProductModel.ProtoReflect.Descriptor instead.
func (*ProductModel) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{0}
}

func (x *ProductModel) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *ProductModel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProductModel) GetCategory() CATEGORY {
	if x != nil {
		return x.Category
	}
	return CATEGORY_ZERO
}

func (x *ProductModel) GetKeywords() []string {
	if x != nil {
		return x.Keywords
	}
	return nil
}

func (x *ProductModel) GetCondition() CONDITION {
	if x != nil {
		return x.Condition
	}
	return CONDITION_NEW
}

func (x *ProductModel) GetSalePrice() float32 {
	if x != nil {
		return x.SalePrice
	}
	return 0
}

func (x *ProductModel) GetSellerID() string {
	if x != nil {
		return x.SellerID
	}
	return ""
}

func (x *ProductModel) GetQuantity() int32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *ProductModel) GetFeedBackThumbsUp() int32 {
	if x != nil {
		return x.FeedBackThumbsUp
	}
	return 0
}

func (x *ProductModel) GetFeedBackThumbsDown() int32 {
	if x != nil {
		return x.FeedBackThumbsDown
	}
	return 0
}

func (x *ProductModel) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProductModel) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type CreateProductRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestModel *ProductModel `protobuf:"bytes,1,opt,name=requestModel,proto3" json:"requestModel,omitempty"`
}

func (x *CreateProductRequest) Reset() {
	*x = CreateProductRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductRequest) ProtoMessage() {}

func (x *CreateProductRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductRequest.ProtoReflect.Descriptor instead.
func (*CreateProductRequest) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{1}
}

func (x *CreateProductRequest) GetRequestModel() *ProductModel {
	if x != nil {
		return x.RequestModel
	}
	return nil
}

type CreateProductResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    int32         `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Err           *Error        `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	ResponseModel *ProductModel `protobuf:"bytes,3,opt,name=responseModel,proto3" json:"responseModel,omitempty"`
}

func (x *CreateProductResponse) Reset() {
	*x = CreateProductResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateProductResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProductResponse) ProtoMessage() {}

func (x *CreateProductResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProductResponse.ProtoReflect.Descriptor instead.
func (*CreateProductResponse) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{2}
}

func (x *CreateProductResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *CreateProductResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *CreateProductResponse) GetResponseModel() *ProductModel {
	if x != nil {
		return x.ResponseModel
	}
	return nil
}

type GetProductByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestModel *ProductModel `protobuf:"bytes,1,opt,name=requestModel,proto3" json:"requestModel,omitempty"`
}

func (x *GetProductByIDRequest) Reset() {
	*x = GetProductByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductByIDRequest) ProtoMessage() {}

func (x *GetProductByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductByIDRequest.ProtoReflect.Descriptor instead.
func (*GetProductByIDRequest) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{3}
}

func (x *GetProductByIDRequest) GetRequestModel() *ProductModel {
	if x != nil {
		return x.RequestModel
	}
	return nil
}

type GetProductByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    int32         `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Err           *Error        `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	ResponseModel *ProductModel `protobuf:"bytes,3,opt,name=responseModel,proto3" json:"responseModel,omitempty"`
}

func (x *GetProductByIDResponse) Reset() {
	*x = GetProductByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProductByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProductByIDResponse) ProtoMessage() {}

func (x *GetProductByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProductByIDResponse.ProtoReflect.Descriptor instead.
func (*GetProductByIDResponse) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{4}
}

func (x *GetProductByIDResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *GetProductByIDResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetProductByIDResponse) GetResponseModel() *ProductModel {
	if x != nil {
		return x.ResponseModel
	}
	return nil
}

type ListProductsByKeyWordsAndCategoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestModel *ProductModel `protobuf:"bytes,1,opt,name=requestModel,proto3" json:"requestModel,omitempty"`
}

func (x *ListProductsByKeyWordsAndCategoryRequest) Reset() {
	*x = ListProductsByKeyWordsAndCategoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductsByKeyWordsAndCategoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductsByKeyWordsAndCategoryRequest) ProtoMessage() {}

func (x *ListProductsByKeyWordsAndCategoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductsByKeyWordsAndCategoryRequest.ProtoReflect.Descriptor instead.
func (*ListProductsByKeyWordsAndCategoryRequest) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{5}
}

func (x *ListProductsByKeyWordsAndCategoryRequest) GetRequestModel() *ProductModel {
	if x != nil {
		return x.RequestModel
	}
	return nil
}

type ListProductsByKeyWordsAndCategoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    int32           `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Err           *Error          `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	ResponseModel []*ProductModel `protobuf:"bytes,3,rep,name=responseModel,proto3" json:"responseModel,omitempty"`
}

func (x *ListProductsByKeyWordsAndCategoryResponse) Reset() {
	*x = ListProductsByKeyWordsAndCategoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductsByKeyWordsAndCategoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductsByKeyWordsAndCategoryResponse) ProtoMessage() {}

func (x *ListProductsByKeyWordsAndCategoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductsByKeyWordsAndCategoryResponse.ProtoReflect.Descriptor instead.
func (*ListProductsByKeyWordsAndCategoryResponse) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{6}
}

func (x *ListProductsByKeyWordsAndCategoryResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ListProductsByKeyWordsAndCategoryResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ListProductsByKeyWordsAndCategoryResponse) GetResponseModel() []*ProductModel {
	if x != nil {
		return x.ResponseModel
	}
	return nil
}

type ListProductsBySellerIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestModel *ProductModel `protobuf:"bytes,1,opt,name=requestModel,proto3" json:"requestModel,omitempty"`
}

func (x *ListProductsBySellerIDRequest) Reset() {
	*x = ListProductsBySellerIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductsBySellerIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductsBySellerIDRequest) ProtoMessage() {}

func (x *ListProductsBySellerIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductsBySellerIDRequest.ProtoReflect.Descriptor instead.
func (*ListProductsBySellerIDRequest) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{7}
}

func (x *ListProductsBySellerIDRequest) GetRequestModel() *ProductModel {
	if x != nil {
		return x.RequestModel
	}
	return nil
}

type ListProductsBySellerIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    int32           `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Err           *Error          `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	ResponseModel []*ProductModel `protobuf:"bytes,3,rep,name=responseModel,proto3" json:"responseModel,omitempty"`
}

func (x *ListProductsBySellerIDResponse) Reset() {
	*x = ListProductsBySellerIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProductsBySellerIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProductsBySellerIDResponse) ProtoMessage() {}

func (x *ListProductsBySellerIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProductsBySellerIDResponse.ProtoReflect.Descriptor instead.
func (*ListProductsBySellerIDResponse) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{8}
}

func (x *ListProductsBySellerIDResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *ListProductsBySellerIDResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *ListProductsBySellerIDResponse) GetResponseModel() []*ProductModel {
	if x != nil {
		return x.ResponseModel
	}
	return nil
}

type UpdateProductByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestModel *ProductModel `protobuf:"bytes,1,opt,name=requestModel,proto3" json:"requestModel,omitempty"`
}

func (x *UpdateProductByIDRequest) Reset() {
	*x = UpdateProductByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductByIDRequest) ProtoMessage() {}

func (x *UpdateProductByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductByIDRequest.ProtoReflect.Descriptor instead.
func (*UpdateProductByIDRequest) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateProductByIDRequest) GetRequestModel() *ProductModel {
	if x != nil {
		return x.RequestModel
	}
	return nil
}

type UpdateProductByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode    int32         `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Err           *Error        `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
	ResponseModel *ProductModel `protobuf:"bytes,3,opt,name=responseModel,proto3" json:"responseModel,omitempty"`
}

func (x *UpdateProductByIDResponse) Reset() {
	*x = UpdateProductByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateProductByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProductByIDResponse) ProtoMessage() {}

func (x *UpdateProductByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProductByIDResponse.ProtoReflect.Descriptor instead.
func (*UpdateProductByIDResponse) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateProductByIDResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *UpdateProductByIDResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *UpdateProductByIDResponse) GetResponseModel() *ProductModel {
	if x != nil {
		return x.ResponseModel
	}
	return nil
}

type DeleteProductByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestModel *ProductModel `protobuf:"bytes,1,opt,name=requestModel,proto3" json:"requestModel,omitempty"`
}

func (x *DeleteProductByIDRequest) Reset() {
	*x = DeleteProductByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductByIDRequest) ProtoMessage() {}

func (x *DeleteProductByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductByIDRequest.ProtoReflect.Descriptor instead.
func (*DeleteProductByIDRequest) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteProductByIDRequest) GetRequestModel() *ProductModel {
	if x != nil {
		return x.RequestModel
	}
	return nil
}

type DeleteProductByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusCode int32  `protobuf:"varint,1,opt,name=statusCode,proto3" json:"statusCode,omitempty"`
	Err        *Error `protobuf:"bytes,2,opt,name=err,proto3" json:"err,omitempty"`
}

func (x *DeleteProductByIDResponse) Reset() {
	*x = DeleteProductByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nosql_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteProductByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProductByIDResponse) ProtoMessage() {}

func (x *DeleteProductByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nosql_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProductByIDResponse.ProtoReflect.Descriptor instead.
func (*DeleteProductByIDResponse) Descriptor() ([]byte, []int) {
	return file_nosql_api_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteProductByIDResponse) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *DeleteProductByIDResponse) GetErr() *Error {
	if x != nil {
		return x.Err
	}
	return nil
}

var File_nosql_api_proto protoreflect.FileDescriptor

var file_nosql_api_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6e, 0x6f, 0x73, 0x71, 0x6c, 0x2d, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x05, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd1, 0x03, 0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x08,
	0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x52,
	0x08, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x2e, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x64, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x64,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x53, 0x61, 0x6c, 0x65, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1a, 0x0a, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x51, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x2a, 0x0a, 0x10, 0x46,
	0x65, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x55, 0x70, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x46, 0x65, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x54,
	0x68, 0x75, 0x6d, 0x62, 0x73, 0x55, 0x70, 0x12, 0x2e, 0x0a, 0x12, 0x46, 0x65, 0x65, 0x64, 0x42,
	0x61, 0x63, 0x6b, 0x54, 0x68, 0x75, 0x6d, 0x62, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x46, 0x65, 0x65, 0x64, 0x42, 0x61, 0x63, 0x6b, 0x54, 0x68, 0x75,
	0x6d, 0x62, 0x73, 0x44, 0x6f, 0x77, 0x6e, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x4f, 0x0a, 0x14, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0c,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x92, 0x01, 0x0a,
	0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x22, 0x50, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42,
	0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x22, 0x93, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75,
	0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e,
	0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x39,
	0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x63, 0x0a, 0x28, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x57, 0x6f,
	0x72, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0xa6,
	0x01, 0x0a, 0x29, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42,
	0x79, 0x4b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x39, 0x0a, 0x0d,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x58, 0x0a, 0x1d, 0x4c, 0x69, 0x73, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65,
	0x6c, 0x22, 0x9b, 0x01, 0x0a, 0x1e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x73, 0x42, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x43, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x52, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22,
	0x53, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x22, 0x96, 0x01, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1e, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65,
	0x72, 0x72, 0x12, 0x39, 0x0a, 0x0d, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0d,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x22, 0x53, 0x0a,
	0x18, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x37, 0x0a, 0x0c, 0x72, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x13, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4d,
	0x6f, 0x64, 0x65, 0x6c, 0x52, 0x0c, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4d, 0x6f, 0x64,
	0x65, 0x6c, 0x22, 0x5b, 0x0a, 0x19, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12,
	0x1e, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x03, 0x65, 0x72, 0x72, 0x2a,
	0x6e, 0x0a, 0x08, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x12, 0x08, 0x0a, 0x04, 0x5a,
	0x45, 0x52, 0x4f, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x4e, 0x45, 0x10, 0x01, 0x12, 0x07,
	0x0a, 0x03, 0x54, 0x57, 0x4f, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x54, 0x48, 0x52, 0x45, 0x45,
	0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x4f, 0x55, 0x52, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04,
	0x46, 0x49, 0x56, 0x45, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x49, 0x58, 0x10, 0x06, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x45, 0x56, 0x45, 0x4e, 0x10, 0x07, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x49,
	0x47, 0x48, 0x54, 0x10, 0x08, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x49, 0x4e, 0x45, 0x10, 0x09, 0x2a,
	0x1e, 0x0a, 0x09, 0x43, 0x4f, 0x4e, 0x44, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x12, 0x07, 0x0a, 0x03,
	0x4e, 0x45, 0x57, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x44, 0x10, 0x01, 0x32,
	0x9a, 0x05, 0x0a, 0x0c, 0x4e, 0x4f, 0x53, 0x51, 0x4c, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x43, 0x0a, 0x0a, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x12, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4c, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63,
	0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x88, 0x01, 0x0a, 0x21, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x4b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x41,
	0x6e, 0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x2f, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42,
	0x79, 0x4b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73,
	0x42, 0x79, 0x4b, 0x65, 0x79, 0x57, 0x6f, 0x72, 0x64, 0x73, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x67, 0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42,
	0x79, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x42, 0x79,
	0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x25, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x73, 0x42, 0x79, 0x53, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x58, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64,
	0x75, 0x63, 0x74, 0x42, 0x79, 0x49, 0x44, 0x12, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x42, 0x79,
	0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x32, 0x5a, 0x30,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x64, 0x61, 0x72, 0x73,
	0x68, 0x73, 0x72, 0x69, 0x6e, 0x69, 0x76, 0x61, 0x73, 0x61, 0x6e, 0x2f, 0x44, 0x53, 0x5f, 0x53,
	0x32, 0x34, 0x2f, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nosql_api_proto_rawDescOnce sync.Once
	file_nosql_api_proto_rawDescData = file_nosql_api_proto_rawDesc
)

func file_nosql_api_proto_rawDescGZIP() []byte {
	file_nosql_api_proto_rawDescOnce.Do(func() {
		file_nosql_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_nosql_api_proto_rawDescData)
	})
	return file_nosql_api_proto_rawDescData
}

var file_nosql_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_nosql_api_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_nosql_api_proto_goTypes = []interface{}{
	(CATEGORY)(0),                                     // 0: proto.CATEGORY
	(CONDITION)(0),                                    // 1: proto.CONDITION
	(*ProductModel)(nil),                              // 2: proto.ProductModel
	(*CreateProductRequest)(nil),                      // 3: proto.CreateProductRequest
	(*CreateProductResponse)(nil),                     // 4: proto.CreateProductResponse
	(*GetProductByIDRequest)(nil),                     // 5: proto.GetProductByIDRequest
	(*GetProductByIDResponse)(nil),                    // 6: proto.GetProductByIDResponse
	(*ListProductsByKeyWordsAndCategoryRequest)(nil),  // 7: proto.ListProductsByKeyWordsAndCategoryRequest
	(*ListProductsByKeyWordsAndCategoryResponse)(nil), // 8: proto.ListProductsByKeyWordsAndCategoryResponse
	(*ListProductsBySellerIDRequest)(nil),             // 9: proto.ListProductsBySellerIDRequest
	(*ListProductsBySellerIDResponse)(nil),            // 10: proto.ListProductsBySellerIDResponse
	(*UpdateProductByIDRequest)(nil),                  // 11: proto.UpdateProductByIDRequest
	(*UpdateProductByIDResponse)(nil),                 // 12: proto.UpdateProductByIDResponse
	(*DeleteProductByIDRequest)(nil),                  // 13: proto.DeleteProductByIDRequest
	(*DeleteProductByIDResponse)(nil),                 // 14: proto.DeleteProductByIDResponse
	(*timestamppb.Timestamp)(nil),                     // 15: google.protobuf.Timestamp
	(*Error)(nil),                                     // 16: proto.error
	(*InitializeRequest)(nil),                         // 17: proto.InitializeRequest
	(*InitializeResponse)(nil),                        // 18: proto.InitializeResponse
}
var file_nosql_api_proto_depIdxs = []int32{
	0,  // 0: proto.ProductModel.Category:type_name -> proto.CATEGORY
	1,  // 1: proto.ProductModel.Condition:type_name -> proto.CONDITION
	15, // 2: proto.ProductModel.CreatedAt:type_name -> google.protobuf.Timestamp
	15, // 3: proto.ProductModel.UpdatedAt:type_name -> google.protobuf.Timestamp
	2,  // 4: proto.CreateProductRequest.requestModel:type_name -> proto.ProductModel
	16, // 5: proto.CreateProductResponse.err:type_name -> proto.error
	2,  // 6: proto.CreateProductResponse.responseModel:type_name -> proto.ProductModel
	2,  // 7: proto.GetProductByIDRequest.requestModel:type_name -> proto.ProductModel
	16, // 8: proto.GetProductByIDResponse.err:type_name -> proto.error
	2,  // 9: proto.GetProductByIDResponse.responseModel:type_name -> proto.ProductModel
	2,  // 10: proto.ListProductsByKeyWordsAndCategoryRequest.requestModel:type_name -> proto.ProductModel
	16, // 11: proto.ListProductsByKeyWordsAndCategoryResponse.err:type_name -> proto.error
	2,  // 12: proto.ListProductsByKeyWordsAndCategoryResponse.responseModel:type_name -> proto.ProductModel
	2,  // 13: proto.ListProductsBySellerIDRequest.requestModel:type_name -> proto.ProductModel
	16, // 14: proto.ListProductsBySellerIDResponse.err:type_name -> proto.error
	2,  // 15: proto.ListProductsBySellerIDResponse.responseModel:type_name -> proto.ProductModel
	2,  // 16: proto.UpdateProductByIDRequest.requestModel:type_name -> proto.ProductModel
	16, // 17: proto.UpdateProductByIDResponse.err:type_name -> proto.error
	2,  // 18: proto.UpdateProductByIDResponse.responseModel:type_name -> proto.ProductModel
	2,  // 19: proto.DeleteProductByIDRequest.requestModel:type_name -> proto.ProductModel
	16, // 20: proto.DeleteProductByIDResponse.err:type_name -> proto.error
	17, // 21: proto.NOSQLService.Initialize:input_type -> proto.InitializeRequest
	3,  // 22: proto.NOSQLService.CreateProduct:input_type -> proto.CreateProductRequest
	5,  // 23: proto.NOSQLService.GetProductByID:input_type -> proto.GetProductByIDRequest
	7,  // 24: proto.NOSQLService.ListProductsByKeyWordsAndCategory:input_type -> proto.ListProductsByKeyWordsAndCategoryRequest
	9,  // 25: proto.NOSQLService.ListProductsBySellerID:input_type -> proto.ListProductsBySellerIDRequest
	11, // 26: proto.NOSQLService.UpdateProductByID:input_type -> proto.UpdateProductByIDRequest
	13, // 27: proto.NOSQLService.DeleteProductByID:input_type -> proto.DeleteProductByIDRequest
	18, // 28: proto.NOSQLService.Initialize:output_type -> proto.InitializeResponse
	4,  // 29: proto.NOSQLService.CreateProduct:output_type -> proto.CreateProductResponse
	6,  // 30: proto.NOSQLService.GetProductByID:output_type -> proto.GetProductByIDResponse
	8,  // 31: proto.NOSQLService.ListProductsByKeyWordsAndCategory:output_type -> proto.ListProductsByKeyWordsAndCategoryResponse
	10, // 32: proto.NOSQLService.ListProductsBySellerID:output_type -> proto.ListProductsBySellerIDResponse
	12, // 33: proto.NOSQLService.UpdateProductByID:output_type -> proto.UpdateProductByIDResponse
	14, // 34: proto.NOSQLService.DeleteProductByID:output_type -> proto.DeleteProductByIDResponse
	28, // [28:35] is the sub-list for method output_type
	21, // [21:28] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_nosql_api_proto_init() }
func file_nosql_api_proto_init() {
	if File_nosql_api_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_nosql_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProductModel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateProductResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProductByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductsByKeyWordsAndCategoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductsByKeyWordsAndCategoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductsBySellerIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProductsBySellerIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateProductByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nosql_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteProductByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nosql_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nosql_api_proto_goTypes,
		DependencyIndexes: file_nosql_api_proto_depIdxs,
		EnumInfos:         file_nosql_api_proto_enumTypes,
		MessageInfos:      file_nosql_api_proto_msgTypes,
	}.Build()
	File_nosql_api_proto = out.File
	file_nosql_api_proto_rawDesc = nil
	file_nosql_api_proto_goTypes = nil
	file_nosql_api_proto_depIdxs = nil
}
