version: '3'

services:
  product-db1:
    image: adarshzededa/product-db:latest
    platform: "linux/amd64"
    build:
      dockerfile: ./Dockerfile-product-db
    restart: always
    ports:
      - "50001:50003"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      MONGO_USER: admin
      MONGO_PASSWORD: admin
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 50003
      MONGO_DB: marketplace
      NODE_NAME: product-db1
      PEER_NODE_NAMES: product-db1,product-db2,product-db3,product-db4,product-db5
    networks:
      - marketplace-network
    volumes:
      - mongodb_data1:/data/db

  product-db2:
    image: adarshzededa/product-db:latest
    platform: "linux/amd64"
    build:
      dockerfile: ./Dockerfile-product-db
    restart: always
    ports:
      - "50002:50003"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      MONGO_USER: admin
      MONGO_PASSWORD: admin
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 50003
      MONGO_DB: marketplace
      NODE_NAME: product-db2
      PEER_NODE_NAMES: product-db1,product-db2,product-db3,product-db4,product-db5
    networks:
      - marketplace-network
    volumes:
      - mongodb_data2:/data/db

  product-db3:
    image: adarshzededa/product-db:latest
    platform: "linux/amd64"
    build:
      dockerfile: ./Dockerfile-product-db
    restart: always
    ports:
      - "50003:50003"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      MONGO_USER: admin
      MONGO_PASSWORD: admin
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 50003
      MONGO_DB: marketplace
      NODE_NAME: product-db3
      PEER_NODE_NAMES: product-db1,product-db2,product-db3,product-db4,product-db5
    networks:
      - marketplace-network
    volumes:
      - mongodb_data3:/data/db

  product-db4:
    image: adarshzededa/product-db:latest
    platform: "linux/amd64"
    build:
      dockerfile: ./Dockerfile-product-db
    restart: always
    ports:
      - "50004:50003"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      MONGO_USER: admin
      MONGO_PASSWORD: admin
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 50003
      MONGO_DB: marketplace
      NODE_NAME: product-db4
      PEER_NODE_NAMES: product-db1,product-db2,product-db3,product-db4,product-db5
    networks:
      - marketplace-network
    volumes:
      - mongodb_data4:/data/db

  product-db5:
    image: adarshzededa/product-db:latest
    platform: "linux/amd64"
    build:
      dockerfile: ./Dockerfile-product-db
    restart: always
    ports:
      - "50005:50003"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_HOST: localhost
      MONGO_PORT: 27017
      MONGO_USER: admin
      MONGO_PASSWORD: admin
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 50003
      MONGO_DB: marketplace
      NODE_NAME: product-db5
      PEER_NODE_NAMES: product-db1,product-db2,product-db3,product-db4,product-db5
    networks:
      - marketplace-network
    volumes:
      - mongodb_data5:/data/db


# Add volumes definition
volumes:
  mongodb_data1:
    driver: local
  mongodb_data2:
    driver: local
  mongodb_data3:
    driver: local
  mongodb_data4:
    driver: local
  mongodb_data5:
    driver: local

networks:
  marketplace-network: