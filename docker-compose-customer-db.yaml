version: '3'

services:
  customer-db1:
    image: adarshzededa/customer-db:latest
    platform: "linux/amd64"
    build:
      dockerfile: ./Dockerfile-customer-db
    restart: always
    ports:
      - "50001:50002"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: marketplace
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_MAX_CONN: 500
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 50002
      NODE_NAME: customer-db1
      PEER_NODE_NAMES: customer-db1,customer-db2,customer-db3,customer-db4,customer-db5
    networks:
      - marketplace-network
    volumes:
      - postgresql-data1:/var/lib/postgresql/data
    # Connect command inside the container: psql -h localhost -p 5432 -d marketplace -U admin

  customer-db2:
    image: adarshzededa/customer-db:latest
    platform: "linux/amd64"
    build:
      dockerfile: ./Dockerfile-customer-db
    restart: always
    ports:
      - "50002:50002"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: marketplace
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_MAX_CONN: 500
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 50002
      NODE_NAME: customer-db2
      PEER_NODE_NAMES: customer-db1,customer-db2,customer-db3,customer-db4,customer-db5
    networks:
      - marketplace-network
    volumes:
      - postgresql-data2:/var/lib/postgresql/data

  customer-db3:
    image: adarshzededa/customer-db:latest
    platform: "linux/amd64"
    build:
      dockerfile: ./Dockerfile-customer-db
    restart: always
    ports:
      - "50003:50002"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: marketplace
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_MAX_CONN: 500
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 50002
      NODE_NAME: customer-db3
      PEER_NODE_NAMES: customer-db1,customer-db2,customer-db3,customer-db4,customer-db5
    networks:
      - marketplace-network
    volumes:
      - postgresql-data3:/var/lib/postgresql/data

  customer-db4:
    image: adarshzededa/customer-db:latest
    platform: "linux/amd64"
    build:
      dockerfile: ./Dockerfile-customer-db
    restart: always
    ports:
      - "50004:50002"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: marketplace
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_MAX_CONN: 500
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 50002
      NODE_NAME: customer-db4
      PEER_NODE_NAMES: customer-db1,customer-db2,customer-db3,customer-db4,customer-db5
    networks:
      - marketplace-network
    volumes:
      - postgresql-data4:/var/lib/postgresql/data

  customer-db5:
    image: adarshzededa/customer-db:latest
    platform: "linux/amd64"
    build:
      dockerfile: ./Dockerfile-customer-db
    restart: always
    ports:
      - "50005:50002"
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: marketplace
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      POSTGRES_MAX_CONN: 500
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 50002
      NODE_NAME: customer-db5
      PEER_NODE_NAMES: customer-db1,customer-db2,customer-db3,customer-db4,customer-db5
    networks:
      - marketplace-network
    volumes:
      - postgresql-data5:/var/lib/postgresql/data


# Add volumes definition
volumes:
  postgresql-data1:
    driver: local
  postgresql-data2:
    driver: local
  postgresql-data3:
    driver: local
  postgresql-data4:
    driver: local
  postgresql-data5:
    driver: local

networks:
  marketplace-network: